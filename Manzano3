--[[

游릳游릳游릳游릳游릳游릳游릳游릳游릳游릳游릳游릳游릳游릳游릳游릳游릳游릳游릳游릳
游릳游릳游릳游릳游릳游릳游릳游릳游릳游릳
游릳游릳游릳游릳游릳游릳游릳游릳游릳游릳游릳游릳游릳游릳游릳游릳游릳游릳游릳游릳
游릳游릳游릳游릳游릳游릳


Made By BANANO                                                  
Open Source :D      

ToDo List {
better esp with health bar or something
add pcalls and shit
disable everyones colision for antifling :shrug:
perhaps a teleport player to fuck the bring mode 
make farms actually afkable
}                                                   
]]--

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))();
local Window = Library.CreateLib("Manzana Verde", "Serpent");
local Tab = Window:NewTab("AutoFarm Menu");
local MainSection = Tab:NewSection("AutoFarm Menu");
local TargetTab = Window:NewTab("Player Menu");
local TargetSection = TargetTab:NewSection("Player Menu");
local STab = Window:NewTab("Self Menu");
local SSection = STab:NewSection("Self Menu");
local StatTab = Window:NewTab("AutoStat Menu");
local StatSection = StatTab:NewSection("AutoStat Menu");
local TTab = Window:NewTab("Teleport Menu");
local TSection = TTab:NewSection("Teleport Menu");
local KTab = Window:NewTab("Keybind Menu");
local KSection = KTab:NewSection("Keybind Menu");
local MTab = Window:NewTab("Misc Menu");
local MSection = MTab:NewSection("Misc Menu");
local OpTab = Window:NewTab("Opciones");
local OpSection = OpTab:NewSection("Opciones");
_G.CToggle = false;
_G.metalskin = false;
_G.LOCALPLAYER = game.Players.LocalPlayer.Name;
_G.bring = false;
player = game.Players.LocalPlayer;
breakvelocity = function()
	spawn(function()
		local BeenASecond, V3 = false, Vector3.new(0, 0, 0);
		delay(1, function()
			BeenASecond = true;
		end);
		while not BeenASecond do
			for _, v in ipairs(player.Character:GetDescendants()) do
				if v.IsA(v, "BasePart") then
					v.Velocity, v.RotVelocity = V3, V3;
				end
			end
			wait();
		end
	end);
end;
plrlist = {};
plrnum = 0;
getNearPlayer = function(maxDistance)
	pcall(function()
		if (player and player.Character) then
			local playerLocation = player.Character.HumanoidRootPart.Position;
			for i, v in pairs(game.Players:GetChildren()) do
				if (v.Character and (v.Character.Health ~= 0)) then
					local location = v.Character.HumanoidRootPart.Position;
					if (((location - playerLocation).Magnitude <= maxDistance) and (v.Character.Health ~= 0)) then
						pcall(function()
							if (v == player) then
							else
								local teleexist = game:GetService("Workspace")[v.Name].HumanoidRootPart;
								if (not teleexist:FindFirstChild("telekinesisPosition") and (v.Character.Health ~= 0)) then
								elseif (v ~= player) then
									plrnum += 1
									table.insert(plrlist, v.Character);
								end
							end
						end);
					end
				end
			end
		end
	end);
end;
GetList = function()
	x = 1;
	Plyr = game.Players:GetPlayers();
	dropdown = {};
	for value in pairs(Plyr) do
		PLR = Plyr[x].Name;
		x += 1
		table.insert(dropdown, PLR);
	end
end;
TSection:NewToggle("ModoTraer", "", function(state)
	if state then
		_G.bring = true;
	else
		_G.bring = false;
	end
end);
TSection:NewButton("Bar", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1313, 1000, 149);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1313, 197, 149);
	end
	breakvelocity();
end);
TSection:NewButton("ParqueEnConstruccion", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1748.5, 1000, 1269);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1749, 789, 1269);
	end
	breakvelocity();
end);
TSection:NewButton("PlazaDeCiudad", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-385, 1000, 256);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-385, 86, 256);
	end
	breakvelocity();
end);
TSection:NewButton("EdificioEnConstruccion", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(650, 1300, 284);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(650, 779, 284);
	end
	breakvelocity();
end);
TSection:NewButton("Esquina1", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(2773, 1000, -4996);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(2773, 96, -4996);
	end
	breakvelocity();
end);
TSection:NewButton("Esquina2", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3757, 1000, -3801);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3757, 97, -3801);
	end
	breakvelocity();
end);
TSection:NewButton("Esquina3", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3650, 1000, 2764);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3650, 97, 2764);
	end
	breakvelocity();
end);
TSection:NewButton("Esquina4", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(2809, 1000, 2821);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(2810, 102, 2821);
	end
	breakvelocity();
end);
TSection:NewButton("GuaridaMala", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-905, 1000, -1086);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-905, 94, -1086);
	end
	breakvelocity();
end);
TSection:NewButton("Campo", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(2354, 1000, 4);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(2355, 81, 4);
	end
	breakvelocity();
end);
TSection:NewButton("Hero HQ", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(259, 1700, 2748);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(259, 169, 2748);
	end
	breakvelocity();
end);
TSection:NewButton("GuaridaHeroe", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1880, 1000, -1693);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1880, 104, -1694);
	end
	breakvelocity();
end);
TSection:NewButton("TorreIgnite", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-70, 1000, -247);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-70, 616, -247);
	end
	breakvelocity();
end);
TSection:NewButton("BaseMilitar", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(259, 1000, -4639);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(259, 99, -4639);
	end
	breakvelocity();
end);
TSection:NewButton("Motel", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1749.87, 1000, -1348.98);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1750, 94, -1349);
	end
	breakvelocity();
end);
TSection:NewButton("Monta침a", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2206.33, 1500, -2425.4);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2206, 817, -2425);
	end
	breakvelocity();
end);
TSection:NewButton("Monta침a2", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2431.85, 1500, -2363.88);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2429, 762, -2363);
	end
	breakvelocity();
end);
TSection:NewButton("AgujeroMonta침a", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2732, 1256, -1776);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2732, 256, -1776);
	end
	breakvelocity();
end);
TSection:NewButton("Parque", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1399, 1000, 1154);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1399, 94, 1154);
	end
	breakvelocity();
end);
TSection:NewButton("Llanuras", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3683, 1000, -144);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3683, 97, -144);
	end
	breakvelocity();
end);
TSection:NewButton("EstacionPolicia", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-62, 1000, -480);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-62, 94, -480);
	end
	breakvelocity();
end);
TSection:NewButton("Prisi칩n", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-779, 1000, -2594);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-779, 269, -2594);
	end
	breakvelocity();
end);
TSection:NewButton("AreaSecreta", "", function()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1100, 61, -1169);
	breakvelocity();
end);
TSection:NewButton("CuevaSecreta", "", function()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(269, -59, 2729);
	breakvelocity();
end);
StatSection:NewDropdown("AutoStats", "", {"vitality","healing","strength","energy","flight","speed","climbing","swinging","fireball","frost","lightning","power","telekinesis","shield","laserVision","metalSkin"}, function(currentOption)
	selectedstat = currentOption;
end);
StatSection:NewToggle("Toggle AutoStats", "", function(state)
	if state then
		getgenv().AutoStats = true;
		while AutoStats do
			wait(0.1);
			spawn(function()
				game:GetService("ReplicatedStorage").Events.UpgradeAbility:InvokeServer(selectedstat);
			end);
		end
	else
		spawn(function()
			getgenv().AutoStats = false;
		end);
	end
end);
MainSection:NewToggle("AutoFarm Orbes", "", function(state)
	if state then
		getgenv().OrbFarm = true;
		repeat
			local Playerhead = game.Players.LocalPlayer.Character.Head;
			spawn(function()
				for i, v in pairs(game:GetService("Workspace").ExperienceOrbs:GetDescendants()) do
					if ((v.Name == "TouchInterest") and v.Parent) then
						firetouchinterest(Playerhead, v.Parent, 0);
					end
				end
			end);
			wait(15);
		until OrbFarm == false 
	else
		spawn(function()
			getgenv().OrbFarm = false;
		end);
	end
end);
MainSection:NewToggle("LaserCivililesFarm", "", function(state)
	if state then
		getgenv().LaserC = true;
		coroutine.resume(coroutine.create(function()
			local event = game:GetService("ReplicatedStorage").Events.ToggleLaserVision;
			local part = event:InvokeServer(true);
			getgenv().LaserC = true;
			while LaserC and part do
				wait();
				for i, v in pairs(game.Workspace:GetChildren()) do
					if ((v.ClassName == "Model") and (v.Name == "Civilian") and v:FindFirstChild("Humanoid") and (v.Humanoid.Health > 0)) then
						part.Position = v.HumanoidRootPart.Position;
					end
				end
			end
			event:InvokeServer(false);
		end));
	else
		spawn(function()
			getgenv().LaserC = false;
		end);
		breakvelocity();
	end
end);
MainSection:NewToggle("LaserPoliciaFarm", "", function(state)
	if state then
		getgenv().LaserV = true;
		coroutine.resume(coroutine.create(function()
			local event = game:GetService("ReplicatedStorage").Events.ToggleLaserVision;
			local part = event:InvokeServer(true);
			getgenv().LaserV = true;
			while LaserV and part do
				for i, v in pairs(game.Workspace:GetChildren()) do
					if ((v.ClassName == "Model") and (v.Name == "Police") and v:FindFirstChild("Humanoid") and (v.Humanoid.Health > 0)) then
						part.Position = v.HumanoidRootPart.Position;
					end
				end
				wait();
			end
			event:InvokeServer(false);
		end));
	else
		spawn(function()
			getgenv().LaserV = false;
		end);
		breakvelocity();
	end
end);
MainSection:NewToggle("LaserMatonesFarm", "", function(state)
	if state then
		getgenv().LaserH = true;
		coroutine.resume(coroutine.create(function()
			local event = game:GetService("ReplicatedStorage").Events.ToggleLaserVision;
			local part = event:InvokeServer(true);
			getgenv().LaserH = true;
			while LaserH and part do
				wait();
				for i, v in pairs(game.Workspace:GetChildren()) do
					if ((v.ClassName == "Model") and (v.Name == "Thug") and v:FindFirstChild("Humanoid") and (v.Humanoid.Health > 0)) then
						part.Position = v.HumanoidRootPart.Position;
					end
				end
			end
			event:InvokeServer(false);
		end));
	else
		spawn(function()
			getgenv().LaserH = false;
		end);
		breakvelocity();
	end
end);
MainSection:NewToggle("Civiles Farm", "", function(state)
	if state then
		CivilianX = player.Character.HumanoidRootPart.Position['X'];
		CivilianY = player.Character.HumanoidRootPart.Position['Y'];
		CivilianZ = player.Character.HumanoidRootPart.Position['Z'];
		getgenv().Civilian = true;
		while Civilian do
			wait(0.2);
			pcall(function()
				
				for i, v in pairs(game.Workspace:GetChildren()) do
                                        game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					if ((v.ClassName == "Model") and (v.Name == "Civilian") and v:FindFirstChild("Humanoid") and (v.Humanoid.Health > 0)) then
						game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 2);
					end
				end
			end);
		end
	else
		spawn(function()
			getgenv().Civilian = false;
			wait(0.2);
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(CivilianX, CivilianY, CivilianZ);
		end);
	end
end);
MainSection:NewToggle("Policia Farm", "", function(state)
	if state then
		PoliceX = player.Character.HumanoidRootPart.Position['X'];
		PoliceY = player.Character.HumanoidRootPart.Position['Y'];
		PoliceZ = player.Character.HumanoidRootPart.Position['Z'];
		getgenv().Police = true;
		while Police do
			wait(0.2);
			pcall(function()
				
				for i, v in pairs(game.Workspace:GetChildren()) do
                                        game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					if ((v.ClassName == "Model") and (v.Name == "Police") and v:FindFirstChild("Humanoid") and (v.Humanoid.Health > 0)) then
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 2);
					end
				end
			end);
		end
	else
		spawn(function()
			getgenv().Police = false;
			wait(0.2);
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(PoliceX, PoliceY, PoliceZ);
		end);
	end
end);
MainSection:NewToggle("Matones Farm", "", function(state)
	if state then
		thugX = player.Character.HumanoidRootPart.Position['X'];
		thugY = player.Character.HumanoidRootPart.Position['Y'];
		thugZ = player.Character.HumanoidRootPart.Position['Z'];
		getgenv().Thug = true;
		while Thug do
			wait(0.2);
			pcall(function()
				
				for i, v in pairs(game.Workspace:GetChildren()) do
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					if ((v.ClassName == "Model") and (v.Name == "Thug") and v:FindFirstChild("Humanoid") and (v.Humanoid.Health > 0)) then
						game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 2);
					end
				end
			end);
		end
	else
		spawn(function()
			getgenv().Thug = false;
			wait(0.2);
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(thugX, thugY, thugZ);
		end);
	end
end);
SSection:NewToggle("PuntoDeAparici칩n", "", function(state)
	if state then
		getgenv().Deathcheck = true;
		local varX = player.Character.UpperTorso.Position['X'];
		local varY = player.Character.UpperTorso.Position['Y'];
		local varZ = player.Character.UpperTorso.Position['Z'];
		spawn(function()
			while Deathcheck do
				local player = game.Players.LocalPlayer.Character.Humanoid.Health;
				if (player == 0) then
					wait(6.5);
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(varX, varY, varZ);
				end
				wait(1);
			end
		end);
	else
		spawn(function()
			getgenv().Deathcheck = false;
		end);
	end
end);
SSection:NewToggle("Pu침oRapido", "", function(state)
	if state then
		getgenv().rapid = true;
		local UserInputService = game:GetService("UserInputService");
		local function onInputEnded(inputObject, gameProcessedEvent)
			if gameProcessedEvent then
				return;
			end
			if (rapid == true) then
				if (inputObject.UserInputType == Enum.UserInputType.MouseButton1) then
					spawn(function()
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					end);
				end
			end
		end
		UserInputService.InputEnded:Connect(onInputEnded);
	else
		spawn(function()
			getgenv().rapid = false;
		end);
	end
end);
SSection:NewToggle("Pu침oPesadoRapido", "", function(state)
	if state then
		getgenv().Hrapid = true;
		local UserInputService = game:GetService("UserInputService");
		local function onInputEnded(inputObject, gameProcessedEvent)
			if gameProcessedEvent then
				return;
			end
			if (Hrapid == true) then
				if (inputObject.UserInputType == Enum.UserInputType.MouseButton1) then
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0.4, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0.4, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0.4, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0.4, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0.4, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0.4, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0.4, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0.4, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0.4, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0.4, 0.1, 1);
				end
			end
		end
		UserInputService.InputEnded:Connect(onInputEnded);
	else
		spawn(function()
			getgenv().Hrapid = false;
		end);
	end
end);
SSection:NewToggle("SuperPu침oR치pido", "", function(state)
	if state then
		getgenv().superrapid = true;
		local UserInputService = game:GetService("UserInputService");
		local function onInputEnded(inputObject, gameProcessedEvent)
			if gameProcessedEvent then
				return;
			end
			if (superrapid == true) then
				if (inputObject.UserInputType == Enum.UserInputType.MouseButton1) then
					spawn(function()
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					end);
					spawn(function()
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					end);
					spawn(function()
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					end);
					spawn(function()
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					end);
				end
			end
		end
		UserInputService.InputEnded:Connect(onInputEnded);
	else
		spawn(function()
			getgenv().superrapid = false;
		end);
	end
end);
getRoot = function(char)
	local rootPart = char:FindFirstChild("HumanoidRootPart") or char:FindFirstChild("Torso") or char:FindFirstChild("UpperTorso");
	return rootPart;
end;
Players = game:GetService("Players");
SSection:NewButton("Name Esp", "", function()
	local esp_settings = {textsize=20};
	local gui = Instance.new("BillboardGui");
	local esp = Instance.new("TextLabel", gui);
	gui.Name = "esp";
	gui.ResetOnSpawn = false;
	gui.AlwaysOnTop = true;
	gui.LightInfluence = 0;
	gui.Size = UDim2.new(1.75, 0, 1.75, 0);
	esp.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
	esp.Text = "";
	esp.Size = UDim2.new(0.0001, 0.00001, 0.0001, 0.00001);
	esp.BorderSizePixel = 4;
	esp.BorderColor3 = Color3.new(255, 255, 255);
	esp.BorderSizePixel = 0;
	esp.Font = "SourceSansSemibold";
	esp.TextSize = esp_settings.textsize;
	esp.TextColor3 = Color3.fromRGB(255, 255, 255);
	getgenv().esp = true;
	game:GetService("RunService").RenderStepped:Connect(function()
		for i, v in pairs(game:GetService("Players"):GetPlayers()) do
			if ((v ~= game:GetService("Players").LocalPlayer) and Players.LocalPlayer.Character and (v.Character.Head:FindFirstChild("esp") == nil)) then
				esp.Text = "Name: " .. v.Name .. "";
				gui:Clone().Parent = v.Character.Head;
			end
		end
	end);
end);
SSection:NewToggle("Immortal", "", function(state)
	if state then
		local varX = player.Character.UpperTorso.Position['X'];
		local varY = player.Character.UpperTorso.Position['Y'];
		local varZ = player.Character.UpperTorso.Position['Z'];
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-320, 86, 271);
		wait(0.2);
		player.Character.UpperTorso.Waist:Destroy();
		player.Character.Head.Anchored = true;
		wait(2);
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(varX, varY, varZ);
	else
		local varX = player.Character.HumanoidRootPart.Position['X'];
		local varY = player.Character.HumanoidRootPart.Position['Y'];
		local varZ = player.Character.HumanoidRootPart.Position['Z'];
		player.Character:BreakJoints();
		wait(6.5);
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(varX, varY, varZ);
	end
end);
SSection:NewToggle("Invisibilidad", "", function(state)
	if state then
		local varX = player.Character.UpperTorso.Position['X'];
		local varY = player.Character.UpperTorso.Position['Y'];
		local varZ = player.Character.UpperTorso.Position['Z'];
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2711, 229, -1769);
		wait(0.2);
		game:GetService("Workspace")[_G.LOCALPLAYER].LowerTorso.Root:Destroy();
		wait(2);
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(varX, varY, varZ);
	else
		local varX = player.Character.HumanoidRootPart.Position['X'];
		local varY = player.Character.HumanoidRootPart.Position['Y'];
		local varZ = player.Character.HumanoidRootPart.Position['Z'];
		player.Character:BreakJoints();
		wait(6.5);
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(varX, varY, varZ);
	end
end);
SSection:NewToggle("Ocultar t칤tulo GUI", "", function(state)
	if state then
		getgenv().hide = true;
		while hide do
			wait();
			if game.Players.LocalPlayer.Character then
				local rP = game.Players.LocalPlayer.Character.HumanoidRootPart;
				if (rP and rP:FindFirstChild("titleGui")) then
					rP.titleGui:Destroy();
				end
			end
		end
	else
		spawn(function()
			getgenv().hide = false;
		end);
	end
end);
SSection:NewToggle("AntiAgarre", "", function(state)
	if state then
		getgenv().localtele = true;
		spawn(function()
			while localtele do
				game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(Vector3.new(1, 1, 1), false, game.Players[_G.LOCALPLAYER].Character);
				wait();
			end
		end);
	else
		spawn(function()
			getgenv().localtele = false;
		end);
	end
end);
SSection:NewToggle("TelekinesisParaArrojar", "", function(state)
	if state then
		getgenv().telesauras = true;
		while telesauras do
			wait(0.2);
			spawn(function()
				game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(Vector3.new(999999, 999999, 999999), true);
				game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(Vector3.new(999999, 999999, 999999), false);
			end);
		end
	else
		spawn(function()
			getgenv().telesauras = false;
		end);
	end
end);
SSection:NewToggle("TpSeguro", "", function(state)
	if state then
		local player1 = game.Players.LocalPlayer.Character.Humanoid.Health;
		local math = player1 / 3;
		getgenv().st = true;
		while st do
			task.wait();
			spawn(function()
				local player = game.Players.LocalPlayer.Character.Humanoid.Health;
				if (player < math) then
					game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(Vector3.new(1, 1, 1), false, game.Players[_G.LOCALPLAYER].Character);
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1368.27539, 195.429108, 195.75, 0, 0, -1, 0, 1, 0, 1, 0, 0);
				end
			end);
		end
	else
		spawn(function()
			getgenv().st = false;
		end);
	end
end);
SSection:NewToggle("Anti-Empuje", "", function(state)
	if state then
		getgenv().AntiKnockback = true;
		while AntiKnockback do
			task.wait();
			spawn(function()
				local PrimaryPart = player.Character.PrimaryPart;
				if ((PrimaryPart.AssemblyLinearVelocity.Magnitude > 250) or (PrimaryPart.AssemblyAngularVelocity.Magnitude > 250)) then
					PrimaryPart.AssemblyAngularVelocity = Vector3.new(0, 0, 0);
					PrimaryPart.AssemblyLinearVelocity = Vector3.new(0, 0, 0);
					PrimaryPart.CFrame = LastPosition;
				elseif ((PrimaryPart.AssemblyLinearVelocity.Magnitude < 50) or (PrimaryPart.AssemblyAngularVelocity.Magnitude > 50)) then
					LastPosition = PrimaryPart.CFrame;
				end
			end);
		end
	else
		spawn(function()
			getgenv().AntiKnockback = false;
		end);
	end
end);
SSection:NewToggle("Anchor Root Part", "", function(state)
	if state then
		player.Character.HumanoidRootPart.Anchored = true;
	else
		player.Character.HumanoidRootPart.Anchored = false;
	end
end);
MSection:NewSlider("Velocidad", "", 1500, 16, function(s)
	game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = s;
end);
MSection:NewSlider("Salto", "", 350, 50, function(s)
	game.Players.LocalPlayer.Character.Humanoid.JumpPower = s;
end);
MSection:NewButton("Salto inf", "", function()
	game:GetService("UserInputService").JumpRequest:connect(function()
		game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping");
	end);
end);
MSection:NewButton("DestruyeZonaSeguraPartes", "", function()
	game:GetService("Workspace").City.Buildings:Destroy();
	game:GetService("Workspace").City.Interactive.Bank.Model:Destroy();
	game:GetService("Workspace").City.Interactive["Police Station"]:GetChildren()[28]:Destroy();
	game:GetService("Workspace").City.Interactive.Grove.WareHouse:Destroy();
	game:GetService("Workspace").City.Interactive["Main Plaza"]:GetChildren()[38]:Destroy();
	game:GetService("Workspace").SafeZones.Barrier:Destroy();
	game:GetService("Workspace").SafeZones.Barrier:Destroy();
	game:GetService("Workspace").SafeZones.Barrier:Destroy();
	game:GetService("Workspace").SafeZones.Barrier:Destroy();
	game:GetService("Workspace").SafeZones.Barrier:Destroy();
	game:GetService("Workspace").SafeZones.Barrier:Destroy();
	game:GetService("Workspace").SafeZones.Barrier:Destroy();
	game:GetService("Workspace").SafeZones.Barrier:Destroy();
	game:GetService("Workspace").SafeZones.Barrier:Destroy();
	game:GetService("Workspace").SafeZones.Barrier:Destroy();
	game:GetService("Workspace").SafeZones.Barrier:Destroy();
	game:GetService("Workspace").SafeZones.Barrier:Destroy();
	game:GetService("Workspace").SafeZones.Barrier:Destroy();
	game:GetService("Workspace").SafeZones.Barrier:Destroy();
end);
MSection:NewButton("Quitar Lag", "", function()
	local Terrain = workspace:FindFirstChildOfClass("Terrain");
	Terrain.WaterWaveSize = 0;
	Terrain.WaterWaveSpeed = 0;
	Terrain.WaterReflectance = 0;
	Terrain.WaterTransparency = 0;
	settings().Rendering.QualityLevel = 1;
	for i, v in pairs(game:GetDescendants()) do
		if (v:IsA("Part") or v:IsA("UnionOperation") or v:IsA("MeshPart") or v:IsA("CornerWedgePart") or v:IsA("TrussPart")) then
			v.Material = "Plastic";
			v.Reflectance = 0;
		elseif v:IsA("Decal") then
			v.Transparency = 1;
		elseif (v:IsA("ParticleEmitter") or v:IsA("Trail")) then
			v.Lifetime = NumberRange.new(0);
		elseif v:IsA("Explosion") then
			v.BlastPressure = 1;
			v.BlastRadius = 1;
		end
	end
	workspace.DescendantAdded:Connect(function(child)
		coroutine.wrap(function()
			if child:IsA("ForceField") then
				RunService.Heartbeat:Wait();
				child:Destroy();
			elseif child:IsA("Sparkles") then
				RunService.Heartbeat:Wait();
				child:Destroy();
			elseif (child:IsA("Smoke") or child:IsA("Fire")) then
				RunService.Heartbeat:Wait();
				child:Destroy();
			end
		end)();
	end);
end);
MSection:NewButton("Crash Grande", "", function(state)
	for i = 1, 1000 do
		game:GetService("ReplicatedStorage").Events.GroundCrack:FireServer();
	end
end);
MSection:NewButton("Mini Crash", "", function(state)
	local x = 0;
	repeat
		x += 1
		game:GetService("ReplicatedStorage").Events.ToggleBlocking:FireServer("true");
	until x == 5000 
	game:GetService("ReplicatedStorage").Events.ToggleBlocking:FireServer(false);
	wait();
	game:GetService("ReplicatedStorage").Events.ToggleBlocking:FireServer(false);
end);
MSection:NewButton("Crash Danger", "", function(state)
	local x = 0;
	repeat
		x += 1
		game:GetService("ReplicatedStorage").Events.ToggleBlocking:FireServer("true");
	until x == 50000 
	game:GetService("ReplicatedStorage").Events.ToggleBlocking:FireServer(false);
	wait();
	game:GetService("ReplicatedStorage").Events.ToggleBlocking:FireServer(false);
end);
MSection:NewButton("DESTRUCTOR", "", function(state)
	local x = 0;
	repeat
		x += 4
		game:GetService("ReplicatedStorage").Events.ToggleBlocking:FireServer("true");
	until x == 50000 
	game:GetService("ReplicatedStorage").Events.ToggleBlocking:FireServer(false);
	wait();
	game:GetService("ReplicatedStorage").Events.ToggleBlocking:FireServer(false);
end);
MSection:NewButton("Server Crasher", "", function(state)
	local x = 0;
	repeat
		x += 1
		game:GetService("ReplicatedStorage").Events.ToggleBlocking:FireServer("true");
	until x == 50000 
	game:GetService("ReplicatedStorage").Events.ToggleBlocking:FireServer(false);
	wait(0.2);
	game:GetService("ReplicatedStorage").Events.ToggleBlocking:FireServer(false);
end);
MSection:NewButton("Crash Maldito", "", function(state)
	local x = 0;
	repeat
		x += 8
		game:GetService("ReplicatedStorage").Events.ToggleBlocking:FireServer("true");
	until x == 99999  
	game:GetService("ReplicatedStorage").Events.ToggleBlocking:FireServer(false);
	wait();
	game:GetService("ReplicatedStorage").Events.ToggleBlocking:FireServer(false);
end);
MSection:NewButton("Break Velocity", "", function()
	breakvelocity();
end);
MSection:NewButton("Reset", "", function()
	player.Character:BreakJoints();
end);
GetList();
local slcplr = TargetSection:NewDropdown("Selecciona jugador", "", dropdown, function(currentOption)
	spawn(function()
		_G.tplayer = currentOption;
		getgenv().confirm = true;
	end);
end);
TargetSection:NewButton("Actualizar", "", function()
	spawn(function()
		GetList();
		slcplr:Refresh(dropdown);
	end);
end);
TargetSection:NewButton("Tp", "", function()
	spawn(function()
		local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart;
		p1.CFrame = game.Players[_G.tplayer].Character.HumanoidRootPart.CFrame;
		breakvelocity();
	end);
end);
TargetSection:NewToggle("Espectar", "", function(state)
	spawn(function()
		if state then
			spawn(function()
				getgenv().watch = true;
				while watch do
					spawn(function()
						viewing = game.Players[_G.tplayer];
						workspace.CurrentCamera.CameraSubject = viewing.Character;
					end);
					wait(0.1);
				end
			end);
		else
			spawn(function()
				wait(0.1);
				getgenv().watch = false;
				viewing = game.Players.LocalPlayer;
				workspace.CurrentCamera.CameraSubject = viewing.Character;
			end);
		end
	end);
end);
TargetSection:NewToggle("MatarJugador", "", function(state)
	if state then
		getgenv().killplr = true;
		local varX = player.Character.HumanoidRootPart.Position['X'];
		local varY = player.Character.HumanoidRootPart.Position['Y'];
		local varZ = player.Character.HumanoidRootPart.Position['Z'];
		wait();
		local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart;
		local pos = p1.CFrame;
		getgenv().breakv = true;
		spawn(function()
			while breakv do
				breakvelocity();
				game:GetService("ReplicatedStorage").Events.Transform:FireServer("metalSkin", true);
				wait(1);
			end
		end);
		spawn(function()
			while killplr do
				task.wait();
				task.wait();
				task.wait();
				task.wait();
				task.wait();
				task.wait();
				spawn(function()
					pcall(function()
						for i, v in pairs(game.Workspace:GetChildren()) do
							if ((v.Name == _G.tplayer) and v:FindFirstChild("Humanoid") and (v.Humanoid.Health > 0)) then
								game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 1);
							end
						end
					end);
				end);
				spawn(function()
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
				end);
				spawn(function()
					local LookVector = game.Workspace.Camera.CFrame.LookVector;
					game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(LookVector, true);
					game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(LookVector, false);
				end);
				spawn(function()
					if (killplr == false) then
						game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(varX, varY, varZ);
					end
				end);
			end
		end);
	else
		spawn(function()
			getgenv().breakv = false;
			wait(0.2);
			getgenv().killplr = false;
			wait(0.1);
			getgenv().killplr = true;
			breakvelocity();
		end);
	end
end);
TargetSection:NewToggle("Tp sin fin", "", function(state)
	if state then
		getgenv().loopgoto = true;
		local varX = player.Character.HumanoidRootPart.Position['X'];
		local varY = player.Character.HumanoidRootPart.Position['Y'];
		local varZ = player.Character.HumanoidRootPart.Position['Z'];
		wait();
		local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart;
		local pos = p1.CFrame;
		getgenv().breakv = true;
		spawn(function()
			while breakv do
				wait(1);
				breakvelocity();
			end
		end);
		while loopgoto do
			task.wait();
			spawn(function()
				pcall(function()
					for i, v in pairs(game.Workspace:GetChildren()) do
						if ((v.Name == _G.tplayer) and v:FindFirstChild("Humanoid") and (v.Humanoid.Health > 0)) then
							game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 3);
						end
					end
				end);
			end);
			spawn(function()
				if (loopgoto == false) then
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(varX, varY, varZ);
				end
			end);
		end
	else
		spawn(function()
			getgenv().breakv = false;
			wait(0.2);
			getgenv().loopgoto = false;
			wait(0.1);
			getgenv().loopgoto = true;
			breakvelocity();
		end);
	end
end);
TargetSection:NewToggle("LanzarJugador", "", function(state)
	if state then
		getgenv().fling = true;
		local varX = player.Character.HumanoidRootPart.Position['X'];
		local varY = player.Character.HumanoidRootPart.Position['Y'];
		local varZ = player.Character.HumanoidRootPart.Position['Z'];
		wait();
		local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart;
		local pos = p1.CFrame;
		getgenv().Flingvel = true;
		for _, child in pairs(player.Character:GetDescendants()) do
			if child:IsA("BasePart") then
				child.CustomPhysicalProperties = PhysicalProperties.new(math.huge, 0.3, 0.5);
			end
		end
		local bambam = Instance.new("BodyAngularVelocity");
		bambam.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart;
		bambam.AngularVelocity = Vector3.new(0, 1000, 0);
		bambam.MaxTorque = Vector3.new(0, math.huge, 0);
		local Char = player.Character:GetChildren();
		for i, v in next, Char do
			if v:IsA("BasePart") then
				v.CanCollide = false;
				v.Massless = true;
				v.Velocity = Vector3.new(0, 0, 0);
			end
		end
		while fling do
			task.wait();
			spawn(function()
				pcall(function()
					for i, v in pairs(game.Workspace:GetChildren()) do
						if ((v.Name == _G.tplayer) and v:FindFirstChild("Humanoid") and (v.Humanoid.Health > 0)) then
							game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 0);
						end
					end
				end);
			end);
			spawn(function()
				local PrimaryPart = player.Character.PrimaryPart;
				if ((PrimaryPart.AssemblyLinearVelocity.Magnitude > 250) or (PrimaryPart.AssemblyAngularVelocity.Magnitude > 250)) then
					PrimaryPart.AssemblyAngularVelocity = Vector3.new(0, 0, 0);
					PrimaryPart.AssemblyLinearVelocity = Vector3.new(0, 0, 0);
					PrimaryPart.CFrame = LastPosition;
				elseif ((PrimaryPart.AssemblyLinearVelocity.Magnitude < 50) or (PrimaryPart.AssemblyAngularVelocity.Magnitude > 50)) then
					LastPosition = PrimaryPart.CFrame;
				end
			end);
			spawn(function()
				if (fling == false) then
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(varX, varY, varZ);
				end
			end);
		end
	else
		spawn(function()
			getgenv().fling = false;
			wait(0.1);
			getgenv().fling = true;
		end);
		local playerChar = player.Character;
		if (not playerChar or not getRoot(playerChar)) then
			return;
		end
		for i, v in pairs(getRoot(playerChar):GetChildren()) do
			if (v.ClassName == "BodyAngularVelocity") then
				v:Destroy();
			end
		end
		for _, child in pairs(playerChar:GetDescendants()) do
			if ((child.ClassName == "Part") or (child.ClassName == "MeshPart")) then
				child.CustomPhysicalProperties = PhysicalProperties.new(0.7, 0.3, 0.5);
			end
		end
		breakvelocity();
	end
end);
TargetSection:NewToggle("Kill Aura", "", function(state)
	if state then
		getgenv().Kill_A = true;
		spawn(function()
			while killplr do
				task.wait();
				task.wait();
				task.wait();
				task.wait();
				task.wait();
				task.wait();
				spawn(function()
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
				end);
				spawn(function()
					if (killplr == false) then
						game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(varX, varY, varZ);
					end
				end);
			end
		end);
	else
		spawn(function()
			getgenv().breakv = false;
			wait(0.2);
			getgenv().killplr = false;
			wait(0.1);
			getgenv().killplr = true;
			breakvelocity();
		end);
	end
end);
TargetSection:NewToggle("Ojos Laser", "", function(state)
	spawn(function()
		if state then
			getgenv().LaserL = true;
			wait();
			coroutine.resume(coroutine.create(function()
				local event = game:GetService("ReplicatedStorage").Events.ToggleLaserVision;
				local part = event:InvokeServer(true);
				getgenv().LaserL = true;
				while LaserL and part and _G.tplayer do
					wait();
					local target = game.Players:FindFirstChild(_G.tplayer);
					if (target and target.Character and target.Character:FindFirstChild("HumanoidRootPart")) then
						part.Position = target.Character.HumanoidRootPart.Position;
					end
				end
				event:InvokeServer(false);
			end));
		else
			spawn(function()
				getgenv().LaserL = false;
			end);
		end
	end);
end);
TargetSection:NewToggle("ObtenerOrbs", "", function(state)
	spawn(function()
		if state then
			getgenv().ORBGIVE = true;
			while ORBGIVE do
				local character = game.Players:FindFirstChild(_G.tplayer).Character;
				for i, v in pairs(game:GetService("Workspace").ExperienceOrbs:GetChildren()) do
					local hrp = character.HumanoidRootPart;
					v.CFrame = hrp.CFrame;
				end
				wait();
			end
		else
			spawn(function()
				getgenv().ORBGIVE = false;
			end);
		end
	end);
end);
TargetSection:NewButton("Remove Gyro", "", function()
	game:GetService("Workspace")[_G.tplayer].HumanoidRootPart.telekinesisGyro:Destroy();
	game:GetService("Workspace")[_G.tplayer].HumanoidRootPart.telekinesisPosition:Destroy();
	game:GetService("Workspace")[_G.tplayer].Humanoid.PlatformStand = false;
	game:GetService("Workspace")[_G.tplayer].Humanoid.WalkSpeed = 150;
	game:GetService("Workspace")[_G.tplayer].Humanoid.JumpPower = 150;
end);
TargetSection:NewToggle("Desactivar Agarre", "", function(state)
	spawn(function()
		if state then
			Players = game:GetService("Players");
			for i, player in pairs(Players:GetPlayers()) do
				getgenv().LToggle = true;
				spawn(function()
					while LToggle do
						wait();
						game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(Vector3.new(1, 1, 1), false, game.Players[player.Name].Character);
					end
				end);
			end
		else
			spawn(function()
				getgenv().LToggle = false;
			end);
		end
	end);
end);
KSection:NewKeybind("MetalSkin", "", Enum.KeyCode['R'], function()
	if (_G.metalskin == false) then
		game:GetService("ReplicatedStorage").Events.Transform:FireServer("metalSkin", true);
		_G.metalskin = true;
	else
		game:GetService("ReplicatedStorage").Events.Transform:FireServer("metalSkin", false);
		_G.metalskin = false;
	end
end);
KSection:NewKeybind("LlevarJugador", "", Enum.KeyCode['H'], function()
	if (_G.CToggle == false) then
		spawn(function()
			getNearPlayer(99);
			wait();
			_G.CToggle = true;
			getgenv().CarryP = true;
			while CarryP do
				wait();
				spawn(function()
					for i, v in pairs(plrlist) do
						if (v == player) then
						else
							Xt = player.Character.HumanoidRootPart.Position['X'];
							Yt = player.Character.HumanoidRootPart.Position['Y'];
							Zt = player.Character.HumanoidRootPart.Position['Z'];
							game:GetService("Workspace")[v.Name].HumanoidRootPart.telekinesisPosition.Position = Vector3.new(Xt, Yt + 8, Zt + 5);
						end
					end
				end);
			end
		end);
	else
		spawn(function()
			_G.CToggle = false;
			plrlist = {};
			getgenv().CarryP = false;
		end);
	end
end);
KSection:NewKeybind("AgarreBloqueado", "", Enum.KeyCode['T'], function()
	spawn(function()
		local LookVector = game.Workspace.Camera.CFrame.LookVector;
		game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(LookVector, true);
		game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(LookVector, false);
	end);
end);
KSection:NewKeybind("TelekinesisMuerte", "", Enum.KeyCode['G'], function()
	spawn(function()
		getNearPlayer(99);
		for i, v in pairs(plrlist) do
			if (v == player) then
			else
				spawn(function()
					v.Head.Neck:Destroy();
					plrlist = {};
					wait(0.2);
					spawn(function()
						game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(Vector3.new(1, 1, 1), false, game.Players[v.Name].Character);
					end);
				end);
			end
		end
	end);
end);
KSection:NewKeybind("LiberarAgarre", "", Enum.KeyCode['C'], function()
	plrlist = {};
	Players = game:GetService("Players");
	for i, player in pairs(Players:GetPlayers()) do
		spawn(function()
			game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(Vector3.new(1, 1, 1), false, game.Players[player.Name].Character);
		end);
	end
end);
KSection:NewKeybind("Toggle UI", "", Enum.KeyCode.RightShift, function()
	Library:ToggleUI();
end);
OpSection:NewToggle("fly", "",
 function(state)
		spawn(function()
local main = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local up = Instance.new("TextButton")
local down = Instance.new("TextButton")
local onof = Instance.new("TextButton")
local TextLabel = Instance.new("TextLabel")
local plus = Instance.new("TextButton")
local speed = Instance.new("TextLabel")
local mine = Instance.new("TextButton")
local closebutton = Instance.new("TextButton")
local mini = Instance.new("TextButton")
local mini2 = Instance.new("TextButton") 

main.Name = "main"
main.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
main.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
main.ResetOnSpawn = false 

Frame.Parent = main
Frame.BackgroundColor3 = Color3.fromRGB(163, 255, 137)
Frame.BorderColor3 = Color3.fromRGB(103, 221, 213)
Frame.Position = UDim2.new(0.100320168, 0, 0.379746825, 0)
Frame.Size = UDim2.new(0, 190, 0, 57) 

up.Name = "up"
up.Parent = Frame
up.BackgroundColor3 = Color3.fromRGB(79, 255, 152)
up.Size = UDim2.new(0, 44, 0, 28)
up.Font = Enum.Font.SourceSans
up.Text = "UP"
up.TextColor3 = Color3.fromRGB(0, 0, 0)
up.TextSize = 14.000 

down.Name = "down"
down.Parent = Frame
down.BackgroundColor3 = Color3.fromRGB(215, 255, 121)
down.Position = UDim2.new(0, 0, 0.491228074, 0)
down.Size = UDim2.new(0, 44, 0, 28)
down.Font = Enum.Font.SourceSans
down.Text = "DOWN"
down.TextColor3 = Color3.fromRGB(0, 0, 0)
down.TextSize = 14.000 

onof.Name = "onof"
onof.Parent = Frame
onof.BackgroundColor3 = Color3.fromRGB(255, 249, 74)
onof.Position = UDim2.new(0.702823281, 0, 0.491228074, 0)
onof.Size = UDim2.new(0, 56, 0, 28)
onof.Font = Enum.Font.SourceSans
onof.Text = "fly"
onof.TextColor3 = Color3.fromRGB(0, 0, 0)
onof.TextSize = 14.000 

TextLabel.Parent = Frame
TextLabel.BackgroundColor3 = Color3.fromRGB(242, 60, 255)
TextLabel.Position = UDim2.new(0.469327301, 0, 0, 0)
TextLabel.Size = UDim2.new(0, 100, 0, 28)
TextLabel.Font = Enum.Font.SourceSans
TextLabel.Text = "Fly GUI V3"
TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.TextScaled = true
TextLabel.TextSize = 14.000
TextLabel.TextWrapped = true 

plus.Name = "plus"
plus.Parent = Frame
plus.BackgroundColor3 = Color3.fromRGB(133, 145, 255)
plus.Position = UDim2.new(0.231578946, 0, 0, 0)
plus.Size = UDim2.new(0, 45, 0, 28)
plus.Font = Enum.Font.SourceSans
plus.Text = "+"
plus.TextColor3 = Color3.fromRGB(0, 0, 0)
plus.TextScaled = true
plus.TextSize = 14.000
plus.TextWrapped = true 

speed.Name = "speed"
speed.Parent = Frame
speed.BackgroundColor3 = Color3.fromRGB(255, 85, 0)
speed.Position = UDim2.new(0.468421042, 0, 0.491228074, 0)
speed.Size = UDim2.new(0, 44, 0, 28)
speed.Font = Enum.Font.SourceSans
speed.Text = "1"
speed.TextColor3 = Color3.fromRGB(0, 0, 0)
speed.TextScaled = true
speed.TextSize = 14.000
speed.TextWrapped = true 

mine.Name = "mine"
mine.Parent = Frame
mine.BackgroundColor3 = Color3.fromRGB(123, 255, 247)
mine.Position = UDim2.new(0.231578946, 0, 0.491228074, 0)
mine.Size = UDim2.new(0, 45, 0, 29)
mine.Font = Enum.Font.SourceSans
mine.Text = "-"
mine.TextColor3 = Color3.fromRGB(0, 0, 0)
mine.TextScaled = true
mine.TextSize = 14.000
mine.TextWrapped = true 

closebutton.Name = "Close"
closebutton.Parent = main.Frame
closebutton.BackgroundColor3 = Color3.fromRGB(225, 25, 0)
closebutton.Font = "SourceSans"
closebutton.Size = UDim2.new(0, 45, 0, 28)
closebutton.Text = "X"
closebutton.TextSize = 30
closebutton.Position = UDim2.new(0, 0, -1, 27) 

mini.Name = "minimize"
mini.Parent = main.Frame
mini.BackgroundColor3 = Color3.fromRGB(192, 150, 230)
mini.Font = "SourceSans"
mini.Size = UDim2.new(0, 45, 0, 28)
mini.Text = "-"
mini.TextSize = 40
mini.Position = UDim2.new(0, 44, -1, 27) 

mini2.Name = "minimize2"
mini2.Parent = main.Frame
mini2.BackgroundColor3 = Color3.fromRGB(192, 150, 230)
mini2.Font = "SourceSans"
mini2.Size = UDim2.new(0, 45, 0, 28)
mini2.Text = "+"
mini2.TextSize = 40
mini2.Position = UDim2.new(0, 44, -1, 57)
mini2.Visible = false 

speeds = 1 

local speaker = game:GetService("Players").LocalPlayer 

local chr = game.Players.LocalPlayer.Character
local hum = chr and chr:FindFirstChildWhichIsA("Humanoid") 

nowe = false 

game:GetService("StarterGui"):SetCore("SendNotification", { 
Title = "Fly GUI V3";
Text = "By me_ozone and Quandale The Dinglish XII#3550";
Icon = "rbxthumb://type=Asset&id=5107182114&w=150&h=150"})
Duration = 5; 

Frame.Active = true -- main = gui
Frame.Draggable = true 

onof.MouseButton1Down:connect(function() 

if nowe == true then
nowe = false 

speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,true)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,true)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,true)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,true)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,true)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,true)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,true)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,true)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,true)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,true)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,true)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,true)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,true)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,true)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,true)
speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.RunningNoPhysics)
else 
nowe = true



for i = 1, speeds do
spawn(function() 

local hb = game:GetService("RunService").Heartbeat


tpwalking = true
local chr = game.Players.LocalPlayer.Character
local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
while tpwalking and hb:Wait() and chr and hum and hum.Parent do
if hum.MoveDirection.Magnitude > 0 then
chr:TranslateBy(hum.MoveDirection)
end
end 

end)
end
game.Players.LocalPlayer.Character.Animate.Disabled = true
local Char = game.Players.LocalPlayer.Character
local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController") 

for i,v in next, Hum:GetPlayingAnimationTracks() do
v:AdjustSpeed(0)
end
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,false)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,false)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,false)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,false)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,false)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,false)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,false)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,false)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,false)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,false)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,false)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,false)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,false)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,false)
speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
end




if game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid").RigType == Enum.HumanoidRigType.R6 then



local plr = game.Players.LocalPlayer
local torso = plr.Character.Torso
local flying = true
local deb = true
local ctrl = {f = 0, b = 0, l = 0, r = 0}
local lastctrl = {f = 0, b = 0, l = 0, r = 0}
local maxspeed = 50
local speed = 0


local bg = Instance.new("BodyGyro", torso)
bg.P = 9e4
bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
bg.cframe = torso.CFrame
local bv = Instance.new("BodyVelocity", torso)
bv.velocity = Vector3.new(0,0.1,0)
bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
if nowe == true then
plr.Character.Humanoid.PlatformStand = true
end
while nowe == true or game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 do
game:GetService("RunService").RenderStepped:Wait() 

if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
speed = speed+.5+(speed/maxspeed)
if speed > maxspeed then
speed = maxspeed
end
elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
speed = speed-1
if speed < 0 then
speed = 0
end
end
if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
else
bv.velocity = Vector3.new(0,0,0)
end
--game.Players.LocalPlayer.Character.Animate.Disabled = true
bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
end
ctrl = {f = 0, b = 0, l = 0, r = 0}
lastctrl = {f = 0, b = 0, l = 0, r = 0}
speed = 0
bg:Destroy()
bv:Destroy()
plr.Character.Humanoid.PlatformStand = false
game.Players.LocalPlayer.Character.Animate.Disabled = false
tpwalking = false




else
local plr = game.Players.LocalPlayer
local UpperTorso = plr.Character.UpperTorso
local flying = true
local deb = true
local ctrl = {f = 0, b = 0, l = 0, r = 0}
local lastctrl = {f = 0, b = 0, l = 0, r = 0}
local maxspeed = 50
local speed = 0


local bg = Instance.new("BodyGyro", UpperTorso)
bg.P = 9e4
bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
bg.cframe = UpperTorso.CFrame
local bv = Instance.new("BodyVelocity", UpperTorso)
bv.velocity = Vector3.new(0,0.1,0)
bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
if nowe == true then
plr.Character.Humanoid.PlatformStand = true
end
while nowe == true or game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 do
wait() 

if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
speed = speed+.5+(speed/maxspeed)
if speed > maxspeed then
speed = maxspeed
end
elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
speed = speed-1
if speed < 0 then
speed = 0
end
end
if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
else
bv.velocity = Vector3.new(0,0,0)
end 

bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
end
ctrl = {f = 0, b = 0, l = 0, r = 0}
lastctrl = {f = 0, b = 0, l = 0, r = 0}
speed = 0
bg:Destroy()
bv:Destroy()
plr.Character.Humanoid.PlatformStand = false
game.Players.LocalPlayer.Character.Animate.Disabled = false
tpwalking = false



end





end) 

local tis 

up.MouseButton1Down:connect(function()
tis = up.MouseEnter:connect(function()
while tis do
wait()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,1,0)
end
end)
end) 

up.MouseLeave:connect(function()
if tis then
tis:Disconnect()
tis = nil
end
end) 

local dis 

down.MouseButton1Down:connect(function()
dis = down.MouseEnter:connect(function()
while dis do
wait()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,-1,0)
end
end)
end) 

down.MouseLeave:connect(function()
if dis then
dis:Disconnect()
dis = nil
end
end)


game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function(char)
wait(0.7)
game.Players.LocalPlayer.Character.Humanoid.PlatformStand = false
game.Players.LocalPlayer.Character.Animate.Disabled = false 

end)


plus.MouseButton1Down:connect(function()
speeds = speeds + 1
speed.Text = speeds
if nowe == true then


tpwalking = false
for i = 1, speeds do
spawn(function() 

local hb = game:GetService("RunService").Heartbeat


tpwalking = true
local chr = game.Players.LocalPlayer.Character
local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
while tpwalking and hb:Wait() and chr and hum and hum.Parent do
if hum.MoveDirection.Magnitude > 0 then
chr:TranslateBy(hum.MoveDirection)
end
end 

end)
end
end
end)
mine.MouseButton1Down:connect(function()
if speeds == 1 then
speed.Text = 'cannot be less than 1'
wait(1)
speed.Text = speeds
else
speeds = speeds - 1
speed.Text = speeds
if nowe == true then
tpwalking = false
for i = 1, speeds do
spawn(function() 

local hb = game:GetService("RunService").Heartbeat


tpwalking = true
local chr = game.Players.LocalPlayer.Character
local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
while tpwalking and hb:Wait() and chr and hum and hum.Parent do
if hum.MoveDirection.Magnitude > 0 then
chr:TranslateBy(hum.MoveDirection)
end
end 

end)
end
end
end
end) 

closebutton.MouseButton1Click:Connect(function()
main:Destroy()
end) 

mini.MouseButton1Click:Connect(function()
up.Visible = false
down.Visible = false
onof.Visible = false
plus.Visible = false
speed.Visible = false
mine.Visible = false
mini.Visible = false
mini2.Visible = true
main.Frame.BackgroundTransparency = 1
closebutton.Position = UDim2.new(0, 0, -1, 57)
end) 

mini2.MouseButton1Click:Connect(function()
up.Visible = true
down.Visible = true
onof.Visible = true
plus.Visible = true
speed.Visible = true
mine.Visible = true
mini.Visible = true
mini2.Visible = false
main.Frame.BackgroundTransparency = 0 
closebutton.Position = UDim2.new(0, 0, -1, 27)
end)
local MainSection = Tab:NewSection("Creado por ManzanaVerde");
local TargetSection = TargetTab:NewSection("Creado por ManzanaVerde");
local SSection = STab:NewSection("Creado por ManzanaVerde");
local StatSection = StatTab:NewSection("Creado por ManzanaVerde");
local TSection = TTab:NewSection("Creado por ManzanaVerde");
local MSection = MTab:NewSection("Creado por ManzanaVerde");
local KSection = KTab:NewSection("Creado por ManzanaVerde");
